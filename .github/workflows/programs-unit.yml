name: Unit

on:
  push:
    branches: [master]
    paths:
      - .github/workflows/programs-unit.yml
      - programs/**
      - Cargo.toml
      - Cargo.lock
  pull_request:
    branches: [master]
    paths:
      - .github/workflows/programs-unit.yml
      - programs/**
      - Cargo.toml
      - Cargo.lock

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: "1.59.0"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: tribeca
          extraPullNames: saber
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - uses: Swatinem/rust-cache@v1
      - name: Run fmt
        run: nix shell .#rust-stable --command cargo fmt -- --check
      - name: Run clippy
        run: nix shell .#rust-stable --command cargo clippy --all-targets -- --deny=warnings
      - name: Check if publish works
        run: nix shell .#rust-stable --command cargo publish --no-verify --dry-run

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: tribeca
          extraPullNames: saber
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - uses: Swatinem/rust-cache@v1
      - name: Run unit tests
        run: nix shell .#rust-stable --command cargo test --lib

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: tribeca
          extraPullNames: saber
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - uses: Swatinem/rust-cache@v1
      - name: Generate docs
        run: nix shell .#rust-stable --command cargo doc
